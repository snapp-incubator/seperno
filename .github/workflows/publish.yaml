name: Build and Publish to PyPI

on:
  push:
    tags:
      - "*-python"

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up Go
        uses: actions/setup-go@v6
        with:
          go-version: "1.22"

      - name: Build Go shared library
        run: |
          cd python
          if [[ "$RUNNER_OS" == "Linux" ]]; then
            mkdir -p seperno/linux
            go build -o seperno/linux/seperno.so -buildmode=c-shared export.go
          elif [[ "$RUNNER_OS" == "macOS" ]]; then
            mkdir -p seperno/macos
            go build -o seperno/macos/seperno.dylib -buildmode=c-shared export.go
          fi

      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          python-version: "3.11"

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel twine

      - name: Build Python package
        run: |
          cd python
          if [[ "$RUNNER_OS" == "Linux" ]]; then
            python setup.py bdist_wheel --plat-name manylinux2014_x86_64
          elif [[ "$RUNNER_OS" == "macOS" ]]; then
            python setup.py bdist_wheel --plat-name macosx_11_0_arm64
          fi

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist-${{ runner.os }}
          path: python/dist

  publish:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v5
        with:
          path: combined_dist
          pattern: dist-*
          merge-multiple: true

      - name: Publish to PyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: |
          pip install twine
          twine upload combined_dist/*